services:
  postgres:
    image: postgres:16
    env_file: ../env/.env
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DB}
    ports: ["5432:5432"]
    volumes:
      - ../migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER} -d ${PG_DB}"]
      interval: 3s
      timeout: 3s
      retries: 20

  kafka:
    image: bitnami/kafka:3.8
    env_file: ../env/.env
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS=0
    ports: ["9092:9092"]
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'kafka-topics.sh --bootstrap-server localhost:9092 --list >/dev/null 2>&1'"]
      interval: 5s
      timeout: 5s
      retries: 25

  app:
    build: 
      context: ../
      dockerfile: docker/Dockerfile
    env_file: ../env/.env
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
    ports: ["8081:8081"]

  spammer:
    build:
      context: ../
      dockerfile: docker/Dockerfile_spammer
    env_file:
      - ../env/.env
    depends_on:
      kafka:
        condition: service_healthy
    ports: ["8082:8082"]
    restart: on-failure